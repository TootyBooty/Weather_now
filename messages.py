import asyncio
from config import dp
from aiogram.dispatcher.filters import Command
from aiogram.types import Message
from keyboards import start_keyboard, City_keyboard, Bye_keyboard
from aiogram.dispatcher import FSMContext
from states import Weather
from getweather import weather_now

@dp.message_handler(Command(['start', 'help']), state=None)
async def help_commands(message:Message):
    await message.answer(text='–ü—Ä–∏–≤–µ—Ç!\n–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É ‚òÄÔ∏è', reply_markup=start_keyboard)
    await Weather.Start.set()


@dp.message_handler(state=Weather.Start)
async def City(message:Message, state:FSMContext):
    await message.answer(text='–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞, –∏–ª–∏ –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Ä—É—á–Ω—É—é', reply_markup=City_keyboard)
    await Weather.City.set()


@dp.message_handler(state=Weather.City)
async def get_answer(message:Message, state:FSMContext):
    city = message.text
    await message.answer(text=weather_now(city), reply_markup=Bye_keyboard)
    await Weather.Bye.set()
    

@dp.message_handler(state=Weather.Bye)
async def goodbye(message:Message, state:FSMContext):
    if message.text == '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥üèô':
        await Weather.City.set()
        await message.answer(text='–ö–∞–∫–æ–π –≥–æ—Ä–æ–¥ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=City_keyboard)
    else:
        await message.answer(text='–í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ üëã\n–ï—Å–ª–∏ —Å–Ω–æ–≤–∞ –∑–∞—Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É, –Ω–∞–∂–º–∏ —Å—é–¥–∞ --> /start')
        await state.finish()


@dp.message_handler(state=None)
async def echo(message:Message):
    await message.answer(text="–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –∑–Ω–∞—é —á—Ç–æ —Ç–µ–±–µ –Ω–∞ —ç—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å ü•∫\n–ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å /start")
